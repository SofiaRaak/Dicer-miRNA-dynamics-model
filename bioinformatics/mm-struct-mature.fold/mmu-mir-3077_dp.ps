%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:45 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-3077)
} def

/sequence { (\
CUGCGGACGGGUGGGCGGGCAGGCC&CCUGCUUUCCGCAG\
) } def
/len { sequence length } bind def

/cutpoint 26 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 6 0.010812154 ubox
1 9 0.003207211 ubox
1 10 0.053893544 ubox
1 14 0.053461186 ubox
1 39 0.955257781 ubox
2 9 0.054008447 ubox
2 13 0.053540566 ubox
2 38 0.989991258 ubox
2 39 0.003284864 ubox
3 8 0.053161691 ubox
3 12 0.054028203 ubox
3 37 0.995957758 ubox
4 9 0.004921959 ubox
4 10 0.009236453 ubox
4 11 0.054130070 ubox
4 36 0.995948571 ubox
5 34 0.003504281 ubox
5 35 0.995726394 ubox
6 33 0.004829917 ubox
6 34 0.995543653 ubox
6 37 0.006780358 ubox
7 12 0.003511113 ubox
7 31 0.014606686 ubox
7 32 0.032402212 ubox
7 33 0.970137710 ubox
8 13 0.054601284 ubox
8 14 0.099149498 ubox
8 15 0.083698677 ubox
8 17 0.456119476 ubox
8 18 0.053855787 ubox
8 29 0.264508833 ubox
8 36 0.011210626 ubox
8 39 0.008300599 ubox
9 16 0.465138014 ubox
9 27 0.012385510 ubox
9 28 0.265407108 ubox
9 30 0.011185223 ubox
9 31 0.105502190 ubox
9 32 0.432143337 ubox
9 33 0.015815063 ubox
9 34 0.005796701 ubox
9 35 0.015787046 ubox
10 16 0.100127095 ubox
10 26 0.012445056 ubox
10 27 0.265720392 ubox
10 28 0.011997684 ubox
10 30 0.097092877 ubox
10 31 0.470737994 ubox
10 32 0.038292817 ubox
10 33 0.016534064 ubox
10 34 0.016614174 ubox
10 35 0.013941839 ubox
11 16 0.037548919 ubox
11 26 0.263043722 ubox
11 27 0.013064028 ubox
11 28 0.011291209 ubox
11 30 0.474870037 ubox
11 31 0.016998650 ubox
11 32 0.033936665 ubox
11 33 0.019846339 ubox
11 34 0.015446701 ubox
11 37 0.068791482 ubox
12 17 0.004181394 ubox
12 21 0.006731392 ubox
12 29 0.474496742 ubox
12 36 0.068854697 ubox
12 38 0.006732607 ubox
13 20 0.007594652 ubox
13 25 0.081792185 ubox
13 26 0.019139480 ubox
13 27 0.100834946 ubox
13 28 0.460889555 ubox
13 31 0.012793900 ubox
13 32 0.469401860 ubox
13 33 0.008004591 ubox
13 35 0.069089994 ubox
13 37 0.007623695 ubox
14 20 0.003211625 ubox
14 24 0.081883704 ubox
14 25 0.283344050 ubox
14 26 0.091204283 ubox
14 27 0.456247620 ubox
14 28 0.003165965 ubox
14 30 0.009671439 ubox
14 31 0.481602254 ubox
14 32 0.018758276 ubox
14 33 0.008735953 ubox
14 34 0.068988716 ubox
14 35 0.013715695 ubox
15 20 0.004612195 ubox
15 24 0.330454775 ubox
15 25 0.004506713 ubox
15 26 0.427432594 ubox
15 27 0.003848284 ubox
15 30 0.483939652 ubox
15 31 0.006108755 ubox
15 32 0.017772103 ubox
15 33 0.064889170 ubox
15 34 0.015119884 ubox
15 37 0.055119564 ubox
16 22 0.098142434 ubox
16 23 0.335762966 ubox
16 29 0.484177811 ubox
16 36 0.055190791 ubox
17 24 0.050614510 ubox
17 25 0.301335011 ubox
17 26 0.004995312 ubox
17 27 0.020001460 ubox
17 28 0.483447633 ubox
17 31 0.013544297 ubox
17 32 0.462979417 ubox
17 33 0.006907099 ubox
17 35 0.055101543 ubox
18 24 0.303342442 ubox
18 25 0.107054616 ubox
18 26 0.020386455 ubox
18 27 0.483739482 ubox
18 30 0.012141529 ubox
18 31 0.653047696 ubox
18 32 0.024446830 ubox
18 34 0.053463949 ubox
19 24 0.107905880 ubox
19 25 0.005086955 ubox
19 26 0.477020294 ubox
19 30 0.677312934 ubox
19 31 0.003886087 ubox
19 33 0.011659105 ubox
20 29 0.677666499 ubox
21 28 0.677530571 ubox
21 32 0.009215188 ubox
22 26 0.006809011 ubox
22 27 0.677617439 ubox
22 31 0.009605145 ubox
23 26 0.668281014 ubox
23 30 0.009657624 ubox
24 29 0.009633257 ubox
1 39 0.9746794 lbox
2 38 0.9746794 lbox
3 37 0.9746794 lbox
4 36 0.9746794 lbox
5 35 0.9746794 lbox
6 34 0.9746794 lbox
7 33 0.9746794 lbox
13 32 0.9746794 lbox
14 31 0.9746794 lbox
15 30 0.9746794 lbox
16 29 0.9746794 lbox
17 28 0.9746794 lbox
18 27 0.9746794 lbox
19 26 0.9746794 lbox
showpage
end
%%EOF
