%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:46 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-3618)
} def

/sequence { (\
UGUGAUUUCCAAUAAUUGAGGC&CUAUUAUGAAAGCAAU\
) } def
/len { sequence length } bind def

/cutpoint 23 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 11 0.031391635 ubox
1 12 0.003440060 ubox
1 14 0.038928540 ubox
1 19 0.004889847 ubox
1 20 0.010405211 ubox
1 25 0.005925368 ubox
1 28 0.005638988 ubox
1 30 0.073021786 ubox
1 31 0.010946174 ubox
1 32 0.006035691 ubox
1 33 0.005786560 ubox
1 34 0.005262629 ubox
1 36 0.565118206 ubox
1 37 0.067443126 ubox
2 7 0.004546154 ubox
2 8 0.003923811 ubox
2 9 0.015534888 ubox
2 10 0.034857796 ubox
2 13 0.042617874 ubox
2 16 0.004740249 ubox
2 23 0.006918672 ubox
2 24 0.006097057 ubox
2 26 0.016642583 ubox
2 27 0.005392340 ubox
2 29 0.118709056 ubox
2 35 0.627463564 ubox
2 38 0.129338652 ubox
3 11 0.036514215 ubox
3 12 0.041953035 ubox
3 14 0.003580151 ubox
3 15 0.005031350 ubox
3 18 0.027339654 ubox
3 19 0.004411728 ubox
3 25 0.017631518 ubox
3 28 0.121718078 ubox
3 31 0.010004491 ubox
3 32 0.004304005 ubox
3 33 0.010771693 ubox
3 34 0.614067618 ubox
3 36 0.610414889 ubox
3 37 0.128215151 ubox
4 8 0.004085057 ubox
4 9 0.031257401 ubox
4 10 0.041961261 ubox
4 13 0.003722649 ubox
4 17 0.053984664 ubox
4 22 0.009490641 ubox
4 23 0.010419661 ubox
4 24 0.016390367 ubox
4 27 0.122302959 ubox
4 35 0.675437178 ubox
4 38 0.004000688 ubox
5 13 0.011164402 ubox
5 16 0.056403835 ubox
5 17 0.003740180 ubox
5 24 0.003419235 ubox
5 26 0.119887621 ubox
5 27 0.003539100 ubox
5 29 0.012214039 ubox
5 38 0.021612755 ubox
6 12 0.011581469 ubox
6 15 0.056759781 ubox
6 19 0.004021870 ubox
6 20 0.004092337 ubox
6 21 0.036292309 ubox
6 25 0.108579780 ubox
6 28 0.011617091 ubox
6 30 0.011377635 ubox
6 31 0.134890091 ubox
6 32 0.160539517 ubox
6 33 0.757772622 ubox
6 34 0.124837998 ubox
6 36 0.007221833 ubox
6 37 0.023363721 ubox
7 11 0.009956321 ubox
7 14 0.055419750 ubox
7 15 0.004589325 ubox
7 18 0.004425415 ubox
7 19 0.005514474 ubox
7 20 0.064029053 ubox
7 21 0.010930800 ubox
7 25 0.005398069 ubox
7 28 0.006554355 ubox
7 30 0.129212183 ubox
7 31 0.167100369 ubox
7 32 0.903107159 ubox
7 33 0.138171455 ubox
7 34 0.022921802 ubox
7 36 0.021847452 ubox
7 37 0.009766737 ubox
8 14 0.005010012 ubox
8 18 0.004534959 ubox
8 19 0.073472053 ubox
8 20 0.014229666 ubox
8 21 0.044348218 ubox
8 25 0.003414848 ubox
8 28 0.013043596 ubox
8 30 0.159100150 ubox
8 31 0.916928778 ubox
8 32 0.128407322 ubox
8 33 0.028896101 ubox
8 34 0.008357841 ubox
8 36 0.010525175 ubox
9 18 0.072347739 ubox
9 20 0.062609528 ubox
9 21 0.060595823 ubox
9 30 0.898772600 ubox
9 34 0.019524105 ubox
10 18 0.157492034 ubox
10 20 0.064360002 ubox
10 21 0.009607756 ubox
10 30 0.235772117 ubox
10 34 0.009219484 ubox
11 16 0.017286027 ubox
11 17 0.155257140 ubox
11 24 0.006178504 ubox
11 26 0.020992153 ubox
11 27 0.340809174 ubox
11 29 0.215455104 ubox
12 16 0.118443049 ubox
12 17 0.029060886 ubox
12 24 0.007476387 ubox
12 26 0.365195777 ubox
12 27 0.042268453 ubox
12 29 0.724161014 ubox
12 38 0.004022780 ubox
13 18 0.007362351 ubox
13 19 0.007521018 ubox
13 20 0.007069758 ubox
13 21 0.004613419 ubox
13 25 0.367277500 ubox
13 28 0.827475923 ubox
13 30 0.006497107 ubox
13 31 0.004189501 ubox
13 37 0.004212839 ubox
14 24 0.351692515 ubox
14 26 0.025559524 ubox
14 27 0.828633962 ubox
14 29 0.013616717 ubox
14 38 0.003398107 ubox
15 24 0.022452708 ubox
15 26 0.813112285 ubox
15 27 0.017039290 ubox
15 29 0.023715844 ubox
15 38 0.077682934 ubox
16 20 0.005091368 ubox
16 21 0.007580550 ubox
16 25 0.733992132 ubox
16 28 0.022419240 ubox
16 31 0.007191644 ubox
16 32 0.009045441 ubox
16 33 0.006247688 ubox
16 34 0.003726014 ubox
16 37 0.087662066 ubox
17 21 0.007105262 ubox
17 25 0.105809280 ubox
17 28 0.024612314 ubox
17 30 0.007470249 ubox
17 31 0.010198415 ubox
17 32 0.006712392 ubox
17 33 0.004517663 ubox
17 36 0.091792122 ubox
17 37 0.003699635 ubox
18 22 0.009209255 ubox
18 23 0.482831542 ubox
18 24 0.119383771 ubox
18 26 0.012965181 ubox
18 27 0.026771267 ubox
18 29 0.005090641 ubox
18 35 0.092201538 ubox
18 38 0.004625945 ubox
19 24 0.381561708 ubox
19 26 0.025215166 ubox
19 27 0.008076412 ubox
19 29 0.009392774 ubox
19 38 0.005277828 ubox
20 23 0.401842064 ubox
20 24 0.123820191 ubox
20 26 0.006770711 ubox
20 27 0.006449614 ubox
20 29 0.004113282 ubox
20 35 0.015301259 ubox
21 23 0.123708675 ubox
21 24 0.014622711 ubox
21 26 0.005571243 ubox
21 27 0.004536863 ubox
21 29 0.004769154 ubox
21 35 0.086783939 ubox
22 30 0.013751041 ubox
22 34 0.086295339 ubox
23 30 0.028344050 ubox
23 34 0.013695881 ubox
24 28 0.004159787 ubox
24 30 0.005746838 ubox
24 31 0.004592619 ubox
24 33 0.014220566 ubox
25 29 0.006326888 ubox
26 31 0.003481250 ubox
26 32 0.004732153 ubox
26 33 0.007683370 ubox
26 37 0.003182853 ubox
27 31 0.004496233 ubox
27 32 0.008116744 ubox
27 33 0.004693874 ubox
27 36 0.003248823 ubox
28 38 0.003286059 ubox
29 34 0.003189585 ubox
29 36 0.016076146 ubox
29 37 0.003818987 ubox
30 35 0.023042712 ubox
33 38 0.005818751 ubox
3 36 0.9746794 lbox
4 35 0.9746794 lbox
6 33 0.9746794 lbox
7 32 0.9746794 lbox
8 31 0.9746794 lbox
9 30 0.9746794 lbox
12 29 0.9746794 lbox
13 28 0.9746794 lbox
14 27 0.9746794 lbox
15 26 0.9746794 lbox
16 25 0.9746794 lbox
showpage
end
%%EOF
