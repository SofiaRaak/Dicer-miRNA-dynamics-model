%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:44 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-297a-4)
} def

/sequence { (\
AUGUAUGUGUGCAUGUGCAUGU&UAUACAUACACACAU\
) } def
/len { sequence length } bind def

/cutpoint 23 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 6 0.003533724 ubox
1 14 0.009277774 ubox
1 29 0.022580392 ubox
1 37 0.051849262 ubox
2 13 0.011671695 ubox
2 28 0.024128935 ubox
2 32 0.225083762 ubox
2 34 0.009122710 ubox
2 36 0.061620683 ubox
3 12 0.012464573 ubox
3 27 0.024616758 ubox
3 31 0.258736299 ubox
3 33 0.009961751 ubox
3 35 0.064279485 ubox
3 37 0.022033849 ubox
4 11 0.012372639 ubox
4 26 0.024604875 ubox
4 30 0.258792848 ubox
4 32 0.009030311 ubox
4 34 0.061524775 ubox
4 36 0.016488260 ubox
5 10 0.010543803 ubox
5 25 0.024536190 ubox
5 29 0.258807819 ubox
5 37 0.806566101 ubox
6 24 0.024196764 ubox
6 28 0.258833122 ubox
6 30 0.008050272 ubox
6 32 0.060932351 ubox
6 34 0.021175886 ubox
6 36 0.926864312 ubox
7 23 0.021300823 ubox
7 27 0.258890715 ubox
7 29 0.008272244 ubox
7 31 0.061471416 ubox
7 33 0.026458016 ubox
7 35 0.962742637 ubox
7 37 0.016450721 ubox
8 19 0.003991039 ubox
8 21 0.028302725 ubox
8 26 0.254577103 ubox
8 28 0.008332912 ubox
8 30 0.061397306 ubox
8 32 0.026499094 ubox
8 34 0.962678836 ubox
8 36 0.017991271 ubox
9 18 0.006238436 ubox
9 20 0.126646956 ubox
9 25 0.223171358 ubox
9 27 0.008334763 ubox
9 29 0.061016078 ubox
9 31 0.026495220 ubox
9 33 0.962905915 ubox
9 35 0.018461725 ubox
9 37 0.004008455 ubox
10 17 0.006123607 ubox
10 19 0.144470009 ubox
10 24 0.210066250 ubox
10 26 0.007735111 ubox
10 28 0.060869071 ubox
10 30 0.025777349 ubox
10 32 0.962677628 ubox
10 34 0.018327318 ubox
10 36 0.004385119 ubox
11 16 0.003191191 ubox
11 18 0.195800439 ubox
11 22 0.082374389 ubox
11 23 0.129614740 ubox
11 25 0.005081008 ubox
11 27 0.060168619 ubox
11 29 0.017772608 ubox
11 31 0.961607847 ubox
11 33 0.018148883 ubox
11 35 0.004468440 ubox
12 17 0.195916415 ubox
12 21 0.107757564 ubox
13 20 0.105867418 ubox
13 22 0.007062510 ubox
13 23 0.003205149 ubox
13 25 0.037882933 ubox
13 29 0.915325792 ubox
14 19 0.098026356 ubox
14 21 0.007449802 ubox
14 24 0.038991782 ubox
14 26 0.021752955 ubox
14 28 0.954316380 ubox
14 30 0.104342652 ubox
14 32 0.005663799 ubox
14 34 0.009421938 ubox
14 36 0.003495372 ubox
15 20 0.004271820 ubox
15 23 0.034648324 ubox
15 25 0.024685390 ubox
15 27 0.955226395 ubox
15 29 0.119400519 ubox
15 31 0.006523103 ubox
15 33 0.014171114 ubox
15 35 0.004390558 ubox
16 24 0.026509184 ubox
16 26 0.944440487 ubox
16 28 0.119794509 ubox
16 30 0.006755001 ubox
16 32 0.014370557 ubox
16 34 0.004386702 ubox
17 22 0.004243320 ubox
17 23 0.028086195 ubox
17 25 0.835579805 ubox
17 27 0.119542581 ubox
17 29 0.005083582 ubox
17 31 0.014400090 ubox
17 33 0.004373842 ubox
19 23 0.177660801 ubox
19 25 0.137645063 ubox
19 29 0.016228351 ubox
20 24 0.173384373 ubox
20 26 0.018739268 ubox
20 28 0.017494963 ubox
21 23 0.159235705 ubox
21 25 0.029254816 ubox
21 27 0.017657145 ubox
22 24 0.030331776 ubox
22 26 0.015699701 ubox
5 37 0.9746794 lbox
6 36 0.9746794 lbox
7 35 0.9746794 lbox
8 34 0.9746794 lbox
9 33 0.9746794 lbox
10 32 0.9746794 lbox
11 31 0.9746794 lbox
13 29 0.9746794 lbox
14 28 0.9746794 lbox
15 27 0.9746794 lbox
16 26 0.9746794 lbox
17 25 0.9746794 lbox
showpage
end
%%EOF
