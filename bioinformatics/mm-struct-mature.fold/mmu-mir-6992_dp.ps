%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:45 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-6992)
} def

/sequence { (\
UGCCUGUGAUGGUUUGGCUGAGU&UCCACUGAUAUCAUGCAG\
) } def
/len { sequence length } bind def

/cutpoint 24 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 16 0.003506756 ubox
1 40 0.736172283 ubox
1 41 0.012662564 ubox
2 13 0.075955033 ubox
2 14 0.003267503 ubox
2 18 0.024718838 ubox
2 39 0.817205850 ubox
3 12 0.079862893 ubox
3 17 0.024797078 ubox
3 38 0.810762786 ubox
3 41 0.025069114 ubox
4 11 0.079887929 ubox
4 16 0.024795132 ubox
4 30 0.004672892 ubox
4 38 0.079246397 ubox
4 41 0.534428596 ubox
5 33 0.008093053 ubox
5 36 0.114098038 ubox
5 38 0.089866283 ubox
5 40 0.546731112 ubox
5 41 0.004628295 ubox
6 14 0.006303991 ubox
6 15 0.003464254 ubox
6 18 0.004183597 ubox
6 28 0.007127301 ubox
6 32 0.008884897 ubox
6 34 0.011468854 ubox
6 35 0.113523282 ubox
6 37 0.760292871 ubox
6 39 0.547946697 ubox
7 17 0.004181833 ubox
7 27 0.007214259 ubox
7 30 0.003183355 ubox
7 31 0.009836068 ubox
7 33 0.028864759 ubox
7 36 0.823062320 ubox
7 38 0.526320248 ubox
7 40 0.033979192 ubox
8 15 0.003977520 ubox
8 26 0.007150498 ubox
8 28 0.003303537 ubox
8 29 0.003256756 ubox
8 32 0.028644012 ubox
8 34 0.004461774 ubox
8 35 0.832279795 ubox
8 37 0.208036430 ubox
8 39 0.037697049 ubox
9 14 0.003987650 ubox
9 15 0.004142022 ubox
9 29 0.009975633 ubox
9 32 0.102996908 ubox
9 34 0.832058257 ubox
9 37 0.483295576 ubox
10 20 0.004495927 ubox
10 27 0.026760121 ubox
10 30 0.045405967 ubox
10 31 0.100416049 ubox
10 33 0.823339165 ubox
10 36 0.533213437 ubox
11 18 0.009054198 ubox
11 19 0.021189185 ubox
11 23 0.003457238 ubox
11 26 0.031006380 ubox
11 28 0.009016323 ubox
11 29 0.105150577 ubox
11 32 0.776433978 ubox
11 34 0.010603629 ubox
11 35 0.534333815 ubox
12 18 0.025403320 ubox
12 25 0.030814856 ubox
12 26 0.004471054 ubox
12 28 0.117410119 ubox
12 29 0.068066210 ubox
12 32 0.220001744 ubox
12 34 0.531467001 ubox
12 35 0.004222172 ubox
12 39 0.005848403 ubox
13 17 0.023785092 ubox
13 20 0.003216835 ubox
13 21 0.007938124 ubox
13 22 0.007318027 ubox
13 27 0.090562747 ubox
13 30 0.157959869 ubox
13 31 0.291100266 ubox
13 33 0.512628489 ubox
13 38 0.005750349 ubox
14 20 0.008714995 ubox
14 21 0.010460325 ubox
14 22 0.007183845 ubox
14 27 0.029239782 ubox
14 30 0.273455197 ubox
14 31 0.541819887 ubox
14 33 0.010306396 ubox
14 41 0.026743064 ubox
15 20 0.010154055 ubox
15 21 0.009540109 ubox
15 22 0.003610140 ubox
15 27 0.711401275 ubox
15 30 0.568232335 ubox
15 31 0.155917302 ubox
15 33 0.011362149 ubox
15 36 0.010766102 ubox
15 40 0.040984688 ubox
15 41 0.005646146 ubox
16 23 0.003229785 ubox
16 24 0.006707493 ubox
16 25 0.032458385 ubox
16 26 0.739885233 ubox
16 28 0.129376133 ubox
16 29 0.598950450 ubox
16 32 0.017061930 ubox
16 35 0.011557796 ubox
16 39 0.041839285 ubox
17 23 0.017631664 ubox
17 24 0.023724766 ubox
17 25 0.730879276 ubox
17 26 0.057010926 ubox
17 28 0.604878981 ubox
17 29 0.140410916 ubox
17 32 0.015074640 ubox
17 34 0.010486805 ubox
17 39 0.059981850 ubox
18 22 0.029745935 ubox
18 30 0.031484266 ubox
18 38 0.060834697 ubox
18 41 0.010445143 ubox
19 27 0.501299956 ubox
19 30 0.005799569 ubox
19 31 0.052177574 ubox
19 36 0.071999951 ubox
19 40 0.011851468 ubox
20 24 0.044612070 ubox
20 25 0.333481293 ubox
20 26 0.500037013 ubox
20 28 0.020636029 ubox
20 29 0.004442825 ubox
20 35 0.073454847 ubox
20 39 0.012022530 ubox
21 24 0.318812545 ubox
21 29 0.079438844 ubox
21 34 0.068639339 ubox
22 24 0.060445345 ubox
22 25 0.163101464 ubox
22 26 0.015669925 ubox
22 28 0.080764660 ubox
22 32 0.012202159 ubox
22 34 0.003800611 ubox
22 37 0.004587022 ubox
22 39 0.004488948 ubox
23 27 0.072793396 ubox
23 31 0.012801871 ubox
23 33 0.005806505 ubox
23 36 0.004675034 ubox
23 38 0.004141941 ubox
24 31 0.019628497 ubox
25 30 0.021512925 ubox
26 30 0.005613355 ubox
28 41 0.023701697 ubox
29 36 0.007150764 ubox
29 40 0.024127912 ubox
30 35 0.007952521 ubox
30 39 0.024225544 ubox
31 37 0.005270669 ubox
32 36 0.004709517 ubox
32 38 0.005508779 ubox
33 37 0.004626213 ubox
1 40 0.9746794 lbox
2 39 0.9746794 lbox
3 38 0.9746794 lbox
6 37 0.9746794 lbox
7 36 0.9746794 lbox
8 35 0.9746794 lbox
9 34 0.9746794 lbox
10 33 0.9746794 lbox
11 32 0.9746794 lbox
15 27 0.9746794 lbox
16 26 0.9746794 lbox
17 25 0.9746794 lbox
showpage
end
%%EOF
