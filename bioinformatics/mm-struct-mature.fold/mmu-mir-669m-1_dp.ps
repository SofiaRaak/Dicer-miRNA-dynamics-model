%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:45 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-669m-1)
} def

/sequence { (\
UGUGUGCAUGUGCAUGUGUGU&AUUACAUCACACAAAUAU\
) } def
/len { sequence length } bind def

/cutpoint 22 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 8 0.005516042 ubox
1 14 0.018025918 ubox
1 16 0.004466667 ubox
1 32 0.005956729 ubox
1 34 0.887267157 ubox
1 35 0.040849702 ubox
1 36 0.009880041 ubox
1 38 0.018114856 ubox
2 7 0.006394185 ubox
2 13 0.020725968 ubox
2 15 0.029504878 ubox
2 17 0.004008874 ubox
2 31 0.006984283 ubox
2 33 0.985782132 ubox
2 37 0.019572379 ubox
2 39 0.049045299 ubox
3 12 0.020629407 ubox
3 14 0.034466345 ubox
3 16 0.017535551 ubox
3 30 0.006950794 ubox
3 32 0.985864330 ubox
3 34 0.012309762 ubox
3 36 0.019286623 ubox
3 38 0.053633402 ubox
4 11 0.012409320 ubox
4 13 0.035907139 ubox
4 15 0.117727316 ubox
4 29 0.006707044 ubox
4 31 0.986116322 ubox
4 33 0.013630569 ubox
4 37 0.054713847 ubox
4 39 0.004883115 ubox
5 10 0.005207655 ubox
5 12 0.035170607 ubox
5 14 0.137946171 ubox
5 30 0.985866597 ubox
5 32 0.012432181 ubox
5 34 0.017942437 ubox
5 35 0.003433755 ubox
5 36 0.054345608 ubox
5 38 0.005304824 ubox
6 11 0.017389327 ubox
6 13 0.144538879 ubox
6 17 0.006794363 ubox
6 19 0.009308073 ubox
6 21 0.005575167 ubox
6 29 0.985482819 ubox
6 31 0.010872540 ubox
6 33 0.019034203 ubox
6 37 0.005077887 ubox
7 12 0.144388373 ubox
7 16 0.012637466 ubox
7 18 0.016893986 ubox
7 20 0.015042092 ubox
8 15 0.012489896 ubox
8 17 0.016931904 ubox
8 19 0.015072651 ubox
8 28 0.976554108 ubox
8 39 0.012345793 ubox
9 14 0.011579313 ubox
9 16 0.016534612 ubox
9 18 0.014980156 ubox
9 27 0.982264087 ubox
9 32 0.059717532 ubox
9 34 0.013817273 ubox
9 38 0.013950933 ubox
10 15 0.008214104 ubox
10 17 0.009034273 ubox
10 23 0.003168275 ubox
10 26 0.982906215 ubox
10 28 0.025866779 ubox
10 31 0.063087725 ubox
10 33 0.015018222 ubox
10 37 0.014344116 ubox
10 39 0.007299728 ubox
11 16 0.004215748 ubox
11 20 0.029081576 ubox
11 22 0.004628911 ubox
11 25 0.971479999 ubox
11 27 0.026295983 ubox
11 30 0.063382714 ubox
11 32 0.014989978 ubox
11 36 0.014222310 ubox
11 38 0.007959210 ubox
12 17 0.006058181 ubox
12 19 0.142943495 ubox
12 21 0.182238191 ubox
12 23 0.035540301 ubox
12 24 0.860466385 ubox
12 26 0.026217358 ubox
12 29 0.063445216 ubox
12 31 0.014898238 ubox
12 37 0.007686969 ubox
13 18 0.162685995 ubox
13 20 0.246030020 ubox
14 19 0.205139260 ubox
14 21 0.033548892 ubox
14 23 0.276040224 ubox
14 24 0.019733015 ubox
14 28 0.075972832 ubox
14 37 0.003429123 ubox
15 20 0.034549999 ubox
15 22 0.261560905 ubox
15 25 0.005634122 ubox
15 27 0.076914411 ubox
15 30 0.006259067 ubox
15 32 0.011256932 ubox
15 34 0.081412966 ubox
15 35 0.003800222 ubox
16 21 0.008431718 ubox
16 23 0.087366230 ubox
16 24 0.009624666 ubox
16 26 0.077081407 ubox
16 28 0.048634836 ubox
16 29 0.007445992 ubox
16 31 0.021466618 ubox
16 33 0.146646943 ubox
17 22 0.084883614 ubox
17 25 0.076260329 ubox
17 27 0.050027789 ubox
17 30 0.021512754 ubox
17 32 0.146825742 ubox
17 34 0.028805111 ubox
18 23 0.046410304 ubox
18 24 0.067223208 ubox
18 26 0.050282829 ubox
18 28 0.014710283 ubox
18 29 0.021099808 ubox
18 31 0.146921485 ubox
18 33 0.032268868 ubox
19 22 0.045976474 ubox
19 25 0.049770039 ubox
19 27 0.025516249 ubox
19 30 0.146722263 ubox
19 32 0.032270407 ubox
20 23 0.021013774 ubox
20 24 0.044144418 ubox
20 26 0.026187088 ubox
20 28 0.004595548 ubox
20 29 0.145402332 ubox
20 31 0.032252502 ubox
21 22 0.019532238 ubox
21 25 0.023435918 ubox
21 27 0.019446762 ubox
21 30 0.029054268 ubox
34 39 0.005156287 ubox
35 39 0.007072473 ubox
1 34 0.9746794 lbox
2 33 0.9746794 lbox
3 32 0.9746794 lbox
4 31 0.9746794 lbox
5 30 0.9746794 lbox
6 29 0.9746794 lbox
8 28 0.9746794 lbox
9 27 0.9746794 lbox
10 26 0.9746794 lbox
11 25 0.9746794 lbox
12 24 0.9746794 lbox
showpage
end
%%EOF
