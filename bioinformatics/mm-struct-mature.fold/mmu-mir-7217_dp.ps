%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:45 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-7217)
} def

/sequence { (\
AACUUGUAUCUUGUGAGACAGAAGG&UGAGAACCCACAAGCAAGAAGA\
) } def
/len { sequence length } bind def

/cutpoint 26 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
3 39 0.050575576 ubox
3 43 0.732839643 ubox
3 46 0.656944566 ubox
4 21 0.003953494 ubox
4 38 0.050860256 ubox
4 42 0.737005312 ubox
4 43 0.013738976 ubox
4 44 0.037124637 ubox
4 45 0.660268560 ubox
4 46 0.017820949 ubox
4 47 0.009959174 ubox
5 20 0.004965349 ubox
5 37 0.050922733 ubox
5 41 0.737926378 ubox
5 42 0.016090265 ubox
5 43 0.041034334 ubox
5 44 0.651673687 ubox
5 45 0.020533749 ubox
5 46 0.012049068 ubox
5 47 0.006962945 ubox
6 19 0.005325591 ubox
6 36 0.050932087 ubox
6 40 0.737499974 ubox
7 18 0.004846748 ubox
7 35 0.048442015 ubox
7 38 0.005506932 ubox
7 39 0.397633115 ubox
7 41 0.018674377 ubox
7 42 0.585497729 ubox
7 43 0.021195708 ubox
7 44 0.007779682 ubox
7 45 0.008498110 ubox
7 46 0.012076778 ubox
7 47 0.004193707 ubox
9 16 0.009042890 ubox
9 18 0.008094042 ubox
9 22 0.016328951 ubox
9 25 0.054509059 ubox
9 30 0.015542087 ubox
9 37 0.013905198 ubox
9 38 0.021893727 ubox
9 39 0.008753638 ubox
9 41 0.094119838 ubox
9 42 0.008847591 ubox
9 43 0.003735580 ubox
9 44 0.059075801 ubox
9 47 0.003665605 ubox
10 15 0.009589980 ubox
10 17 0.008865854 ubox
10 21 0.017443094 ubox
10 24 0.084650294 ubox
10 29 0.016102551 ubox
10 39 0.911403015 ubox
10 43 0.063011276 ubox
10 46 0.004117586 ubox
11 16 0.008202484 ubox
11 20 0.013980884 ubox
11 21 0.010941164 ubox
11 23 0.084744092 ubox
11 28 0.015974693 ubox
11 31 0.003951431 ubox
11 37 0.012920086 ubox
11 38 0.988941409 ubox
11 39 0.003240330 ubox
11 42 0.062891394 ubox
11 45 0.003939416 ubox
12 20 0.017158834 ubox
12 22 0.083541866 ubox
12 27 0.015286135 ubox
12 30 0.004146981 ubox
12 35 0.005962627 ubox
12 37 0.992757318 ubox
12 38 0.006647896 ubox
12 41 0.062571429 ubox
12 44 0.003324102 ubox
13 19 0.020564596 ubox
13 26 0.008408545 ubox
13 32 0.004073048 ubox
13 34 0.006160741 ubox
13 36 0.993796928 ubox
13 40 0.062492024 ubox
14 18 0.018533519 ubox
14 20 0.083617835 ubox
14 28 0.004150886 ubox
14 31 0.004036017 ubox
14 35 0.993448042 ubox
14 37 0.004523104 ubox
14 39 0.061334217 ubox
15 19 0.082438604 ubox
15 32 0.008212369 ubox
15 33 0.038749880 ubox
15 34 0.991131378 ubox
15 36 0.007793240 ubox
16 26 0.005543961 ubox
17 32 0.429378797 ubox
17 33 0.493886679 ubox
17 34 0.014253027 ubox
17 36 0.047361160 ubox
18 26 0.006258456 ubox
19 24 0.126596780 ubox
19 25 0.044088360 ubox
19 27 0.087209419 ubox
19 29 0.146263522 ubox
20 26 0.078940372 ubox
21 26 0.025735513 ubox
21 32 0.032361124 ubox
21 33 0.030482354 ubox
21 34 0.013392020 ubox
21 36 0.006894252 ubox
22 26 0.051570601 ubox
23 26 0.052470155 ubox
24 26 0.038980816 ubox
24 32 0.018428471 ubox
24 33 0.105505253 ubox
24 34 0.015201382 ubox
25 26 0.011615828 ubox
25 32 0.104487486 ubox
25 33 0.016019643 ubox
26 30 0.010411398 ubox
26 31 0.035155896 ubox
26 35 0.021038917 ubox
26 37 0.017317372 ubox
27 32 0.043777777 ubox
27 33 0.046558531 ubox
27 34 0.026492127 ubox
27 36 0.019229633 ubox
29 33 0.021418356 ubox
29 34 0.016868187 ubox
29 36 0.007776781 ubox
40 46 0.009228893 ubox
3 43 0.9746794 lbox
4 42 0.9746794 lbox
5 41 0.9746794 lbox
6 40 0.9746794 lbox
10 39 0.9746794 lbox
11 38 0.9746794 lbox
12 37 0.9746794 lbox
13 36 0.9746794 lbox
14 35 0.9746794 lbox
15 34 0.9746794 lbox
showpage
end
%%EOF
