%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:46 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-7232)
} def

/sequence { (\
UACAUGGAUGAUUGUUUUUCCAAG&aUGGUUGAAUUCGACUUUGGGGC\
) } def
/len { sequence length } bind def

/cutpoint 25 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 6 0.011098324 ubox
1 7 0.012829137 ubox
1 8 0.013071178 ubox
1 10 0.027647310 ubox
1 11 0.017529312 ubox
1 14 0.018336808 ubox
1 25 0.007997692 ubox
1 27 0.008707869 ubox
1 31 0.003951861 ubox
1 43 0.024345035 ubox
1 44 0.019273093 ubox
1 45 0.034726153 ubox
1 46 0.019994348 ubox
2 9 0.027452878 ubox
2 12 0.013601453 ubox
2 13 0.019269740 ubox
2 15 0.629781197 ubox
2 16 0.029559684 ubox
2 17 0.013053415 ubox
2 18 0.006183645 ubox
2 19 0.003993749 ubox
2 26 0.011588199 ubox
2 29 0.013352403 ubox
2 30 0.003597926 ubox
2 41 0.007605345 ubox
2 42 0.023860203 ubox
3 7 0.020606593 ubox
3 10 0.118201372 ubox
3 14 0.681238969 ubox
3 24 0.014299069 ubox
3 27 0.081808153 ubox
3 28 0.014456539 ubox
3 31 0.013276588 ubox
3 37 0.004850480 ubox
3 43 0.237975847 ubox
3 44 0.073617650 ubox
3 45 0.075884543 ubox
3 46 0.050534515 ubox
4 9 0.098812497 ubox
4 12 0.099076162 ubox
4 13 0.672974751 ubox
4 15 0.050529576 ubox
4 16 0.010749948 ubox
4 17 0.014584597 ubox
4 18 0.011226581 ubox
4 19 0.017131019 ubox
4 26 0.077699303 ubox
4 30 0.011990734 ubox
4 40 0.004506544 ubox
4 41 0.012444276 ubox
4 42 0.225504320 ubox
5 10 0.016364086 ubox
5 11 0.129994782 ubox
5 14 0.052674825 ubox
5 22 0.193643910 ubox
5 23 0.008818602 ubox
5 25 0.058887819 ubox
5 37 0.007565019 ubox
5 38 0.010036604 ubox
5 43 0.017632397 ubox
5 44 0.024108112 ubox
5 45 0.005102101 ubox
5 46 0.004502809 ubox
6 12 0.041328128 ubox
6 13 0.045269541 ubox
6 15 0.037082854 ubox
6 16 0.012115018 ubox
6 17 0.120135163 ubox
6 18 0.040135696 ubox
6 19 0.033319199 ubox
6 20 0.007276129 ubox
6 21 0.223544282 ubox
6 36 0.011352719 ubox
6 39 0.023823292 ubox
6 40 0.157162825 ubox
6 41 0.007753004 ubox
6 42 0.026563916 ubox
6 47 0.005589632 ubox
7 12 0.029283486 ubox
7 13 0.023969919 ubox
7 15 0.012643410 ubox
7 16 0.152347540 ubox
7 17 0.058743605 ubox
7 18 0.057074093 ubox
7 19 0.017251427 ubox
7 20 0.223745251 ubox
7 35 0.011315671 ubox
7 36 0.014262050 ubox
7 39 0.166212913 ubox
7 40 0.007109253 ubox
7 41 0.028774746 ubox
7 42 0.027243851 ubox
7 47 0.005419308 ubox
8 12 0.022327528 ubox
8 13 0.045606833 ubox
8 15 0.154616917 ubox
8 16 0.059812450 ubox
8 17 0.061093680 ubox
8 18 0.020334976 ubox
8 19 0.221646218 ubox
8 34 0.010613421 ubox
8 35 0.014166173 ubox
8 40 0.027925541 ubox
8 41 0.027050914 ubox
8 42 0.003922187 ubox
9 14 0.147672369 ubox
9 33 0.009486039 ubox
9 37 0.157768294 ubox
9 38 0.028741546 ubox
10 15 0.012831085 ubox
10 16 0.027431653 ubox
10 17 0.180456785 ubox
10 18 0.055936438 ubox
10 19 0.025078373 ubox
10 20 0.006159069 ubox
10 30 0.004803185 ubox
10 35 0.008772132 ubox
10 36 0.171438345 ubox
10 39 0.028478237 ubox
10 40 0.004252780 ubox
10 41 0.005101400 ubox
10 42 0.004010530 ubox
10 47 0.006653470 ubox
11 15 0.024824494 ubox
11 16 0.194548026 ubox
11 17 0.060992707 ubox
11 18 0.032548964 ubox
11 19 0.008678965 ubox
11 29 0.005052926 ubox
11 34 0.012261058 ubox
11 35 0.165919832 ubox
11 40 0.005388514 ubox
11 41 0.003948281 ubox
11 42 0.004020843 ubox
12 23 0.005843955 ubox
12 28 0.005006496 ubox
12 33 0.014350035 ubox
12 37 0.004199937 ubox
12 38 0.034394815 ubox
12 46 0.004441296 ubox
13 22 0.006759118 ubox
13 27 0.004705975 ubox
13 32 0.013871779 ubox
13 33 0.021312609 ubox
13 37 0.035308815 ubox
13 45 0.003432085 ubox
13 46 0.005282501 ubox
14 18 0.003957414 ubox
14 19 0.006133440 ubox
14 21 0.006883115 ubox
14 26 0.004083592 ubox
14 34 0.167104003 ubox
14 36 0.034892108 ubox
14 39 0.005614455 ubox
14 47 0.081446319 ubox
15 25 0.003696850 ubox
15 31 0.010837581 ubox
15 32 0.010364562 ubox
15 33 0.176097278 ubox
15 38 0.005567460 ubox
15 45 0.003976140 ubox
15 46 0.079556420 ubox
16 31 0.010554675 ubox
16 32 0.177578554 ubox
16 33 0.015767800 ubox
16 37 0.005102942 ubox
16 45 0.044924977 ubox
16 46 0.026972032 ubox
17 31 0.175750544 ubox
17 32 0.017747590 ubox
17 33 0.029645650 ubox
17 44 0.010354518 ubox
17 45 0.018136309 ubox
17 46 0.044551883 ubox
18 31 0.017990711 ubox
18 32 0.029444060 ubox
18 33 0.004281577 ubox
18 43 0.007385371 ubox
18 44 0.003664072 ubox
18 45 0.041259547 ubox
18 46 0.658774267 ubox
19 31 0.026928946 ubox
19 32 0.004757556 ubox
19 44 0.012874788 ubox
19 45 0.867442429 ubox
19 46 0.082471566 ubox
20 27 0.003350983 ubox
20 28 0.185307770 ubox
20 31 0.004353104 ubox
20 43 0.012423103 ubox
20 44 0.949705619 ubox
20 45 0.105446177 ubox
20 46 0.029080698 ubox
21 27 0.185430912 ubox
21 31 0.004178504 ubox
21 43 0.950505738 ubox
21 44 0.102034253 ubox
21 45 0.029397767 ubox
22 26 0.166969828 ubox
22 30 0.004558037 ubox
22 41 0.032797041 ubox
22 42 0.934749606 ubox
23 26 0.015440752 ubox
23 29 0.004123982 ubox
23 40 0.038001387 ubox
23 41 0.848724676 ubox
23 42 0.037200624 ubox
24 26 0.006555726 ubox
24 39 0.037790068 ubox
24 40 0.249357209 ubox
24 41 0.030867297 ubox
24 42 0.011110132 ubox
24 47 0.008434322 ubox
25 30 0.003499035 ubox
25 34 0.007815873 ubox
25 40 0.008132493 ubox
25 41 0.025641980 ubox
25 42 0.070876676 ubox
26 32 0.004414240 ubox
26 33 0.009109527 ubox
26 37 0.028255338 ubox
26 38 0.010468893 ubox
26 43 0.007050035 ubox
27 35 0.004543988 ubox
27 36 0.045890460 ubox
27 39 0.026056374 ubox
27 40 0.869987607 ubox
27 41 0.020400680 ubox
27 42 0.003738112 ubox
28 34 0.005948777 ubox
28 35 0.042582685 ubox
28 36 0.014713911 ubox
28 39 0.973856695 ubox
28 40 0.005522193 ubox
28 47 0.003851334 ubox
29 33 0.005894492 ubox
29 38 0.974597327 ubox
29 44 0.003488711 ubox
29 45 0.003187418 ubox
29 46 0.003796016 ubox
30 37 0.973319383 ubox
30 38 0.005177873 ubox
30 43 0.004725137 ubox
30 44 0.004201676 ubox
30 45 0.003264140 ubox
31 36 0.964522891 ubox
31 39 0.005034699 ubox
31 42 0.006364224 ubox
32 41 0.006719669 ubox
32 42 0.004932656 ubox
33 40 0.006182141 ubox
33 41 0.005011675 ubox
34 45 0.010100411 ubox
34 46 0.009024270 ubox
35 44 0.015199291 ubox
35 45 0.013596810 ubox
35 46 0.010750998 ubox
36 43 0.017139165 ubox
36 44 0.015273774 ubox
36 45 0.014186184 ubox
37 42 0.013101729 ubox
37 47 0.003734311 ubox
38 42 0.006702560 ubox
39 44 0.009526471 ubox
39 45 0.009649372 ubox
39 46 0.009633154 ubox
40 44 0.008791950 ubox
40 45 0.009092702 ubox
18 46 0.9746794 lbox
19 45 0.9746794 lbox
20 44 0.9746794 lbox
21 43 0.9746794 lbox
22 42 0.9746794 lbox
23 41 0.9746794 lbox
27 40 0.9746794 lbox
28 39 0.9746794 lbox
29 38 0.9746794 lbox
30 37 0.9746794 lbox
31 36 0.9746794 lbox
showpage
end
%%EOF
