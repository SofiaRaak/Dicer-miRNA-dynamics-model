%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:45 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-7210)
} def

/sequence { (\
UAACAUUGUAGACAGGCACAAAG&UUAUAUGUAAGUAACAAUGUGGCU\
) } def
/len { sequence length } bind def

/cutpoint 24 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 8 0.006717709 ubox
1 10 0.010081321 ubox
1 11 0.003740377 ubox
1 44 0.108347275 ubox
1 45 0.125098517 ubox
2 7 0.006932360 ubox
2 9 0.009986059 ubox
2 43 0.083479208 ubox
2 47 0.015193984 ubox
3 9 0.018252770 ubox
3 31 0.008859016 ubox
3 43 0.953545024 ubox
4 8 0.018832452 ubox
4 11 0.016303740 ubox
4 30 0.009232141 ubox
4 42 0.986330784 ubox
4 44 0.014955632 ubox
5 29 0.009022986 ubox
5 41 0.986217681 ubox
5 43 0.014089267 ubox
6 12 0.004542647 ubox
6 15 0.005272681 ubox
6 28 0.006835113 ubox
6 40 0.985759911 ubox
6 42 0.011796120 ubox
7 11 0.004542942 ubox
7 12 0.006690101 ubox
7 14 0.016856034 ubox
7 18 0.004380222 ubox
7 20 0.004346550 ubox
7 28 0.005791422 ubox
7 39 0.986147571 ubox
8 13 0.021734609 ubox
8 17 0.005918289 ubox
8 19 0.004941168 ubox
8 27 0.008000151 ubox
8 38 0.986522603 ubox
8 46 0.003643193 ubox
9 16 0.005978630 ubox
9 18 0.005001708 ubox
9 26 0.008340804 ubox
9 32 0.004134429 ubox
9 33 0.004537421 ubox
9 34 0.014789931 ubox
9 36 0.090037748 ubox
9 37 0.967633404 ubox
9 45 0.003594071 ubox
10 25 0.008608030 ubox
10 31 0.006582849 ubox
10 35 0.123114340 ubox
11 17 0.020917311 ubox
11 19 0.013282420 ubox
11 24 0.007004561 ubox
11 31 0.004307199 ubox
11 35 0.222879992 ubox
12 29 0.005530317 ubox
12 31 0.173186328 ubox
12 35 0.853025737 ubox
12 43 0.003637551 ubox
13 23 0.006024495 ubox
13 30 0.175281763 ubox
13 34 0.855634525 ubox
13 42 0.003712636 ubox
14 25 0.004324364 ubox
14 27 0.003418393 ubox
14 29 0.159070668 ubox
14 31 0.019991921 ubox
14 35 0.014357302 ubox
14 41 0.003437021 ubox
14 47 0.141902735 ubox
15 19 0.017377531 ubox
15 24 0.005197915 ubox
15 25 0.008706615 ubox
15 27 0.010163714 ubox
15 29 0.007862418 ubox
15 31 0.029570069 ubox
15 35 0.005128837 ubox
15 46 0.158161329 ubox
15 47 0.026174987 ubox
16 24 0.006499885 ubox
16 25 0.007657085 ubox
16 27 0.029189610 ubox
16 29 0.021341392 ubox
16 31 0.861452989 ubox
16 35 0.025906733 ubox
16 46 0.029244847 ubox
17 23 0.016091397 ubox
17 30 0.872039282 ubox
17 34 0.026734285 ubox
17 44 0.159981103 ubox
17 45 0.022963908 ubox
18 24 0.010411698 ubox
18 25 0.022084827 ubox
18 27 0.015330303 ubox
18 29 0.768197429 ubox
18 31 0.192493717 ubox
18 35 0.011065262 ubox
18 43 0.160987760 ubox
19 23 0.017443099 ubox
19 30 0.198018497 ubox
19 34 0.011583252 ubox
19 42 0.161047028 ubox
19 44 0.008864497 ubox
20 24 0.016763980 ubox
20 25 0.104219075 ubox
20 27 0.197454589 ubox
20 29 0.179586226 ubox
20 41 0.145059304 ubox
20 43 0.007777493 ubox
21 24 0.093769628 ubox
21 25 0.094881879 ubox
21 27 0.047851743 ubox
21 29 0.012229750 ubox
21 41 0.006677514 ubox
22 24 0.089188440 ubox
22 25 0.100334195 ubox
22 27 0.057012019 ubox
22 29 0.006722779 ubox
23 24 0.064029719 ubox
23 25 0.021825790 ubox
23 27 0.010756260 ubox
23 29 0.003205374 ubox
23 38 0.028555361 ubox
24 28 0.008645678 ubox
24 30 0.008516629 ubox
24 32 0.007919664 ubox
24 33 0.038071825 ubox
24 34 0.005133557 ubox
24 36 0.004530249 ubox
24 37 0.046955172 ubox
24 39 0.003554134 ubox
24 40 0.003982787 ubox
25 30 0.005754702 ubox
25 32 0.043069126 ubox
25 33 0.008295338 ubox
25 34 0.004489029 ubox
25 36 0.075119355 ubox
25 37 0.003463815 ubox
25 39 0.004056790 ubox
25 44 0.007772483 ubox
26 31 0.039253323 ubox
26 35 0.077076613 ubox
26 41 0.008274512 ubox
26 43 0.008661157 ubox
27 32 0.006837667 ubox
27 33 0.007963619 ubox
27 34 0.075488340 ubox
27 36 0.058850932 ubox
27 40 0.010169029 ubox
27 42 0.008821182 ubox
28 35 0.062161365 ubox
28 41 0.010558801 ubox
29 33 0.005076445 ubox
29 34 0.061266090 ubox
29 36 0.008887553 ubox
29 37 0.003845643 ubox
29 39 0.075560374 ubox
29 40 0.009017369 ubox
30 35 0.008288463 ubox
30 38 0.084012060 ubox
30 41 0.003887872 ubox
31 36 0.005301095 ubox
31 37 0.082111147 ubox
31 40 0.004465331 ubox
33 47 0.005219545 ubox
34 38 0.005078234 ubox
34 46 0.005812777 ubox
35 40 0.003359689 ubox
35 45 0.005560016 ubox
37 43 0.005065711 ubox
38 42 0.005068873 ubox
3 43 0.9746794 lbox
4 42 0.9746794 lbox
5 41 0.9746794 lbox
6 40 0.9746794 lbox
7 39 0.9746794 lbox
8 38 0.9746794 lbox
9 37 0.9746794 lbox
12 35 0.9746794 lbox
13 34 0.9746794 lbox
16 31 0.9746794 lbox
17 30 0.9746794 lbox
18 29 0.9746794 lbox
showpage
end
%%EOF
