%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:44 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-468)
} def

/sequence { (\
GACUGAUGUACUGAUAAGAAACUCAGU&ACUGAGUGCGUGUCUG\
) } def
/len { sequence length } bind def

/cutpoint 28 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 7 0.007862204 ubox
1 9 0.021319600 ubox
1 11 0.221552859 ubox
1 12 0.016112629 ubox
1 36 0.004606329 ubox
1 41 0.281377909 ubox
1 42 0.006583033 ubox
2 7 0.016420532 ubox
2 9 0.504134962 ubox
2 12 0.011550808 ubox
2 34 0.005222969 ubox
2 38 0.006250987 ubox
2 40 0.281777682 ubox
2 42 0.010398594 ubox
3 8 0.517251311 ubox
3 13 0.007012623 ubox
3 18 0.022005119 ubox
3 33 0.005322732 ubox
3 37 0.006424289 ubox
3 39 0.280064428 ubox
3 43 0.015356013 ubox
4 8 0.009112648 ubox
4 10 0.022565740 ubox
4 13 0.003672107 ubox
4 14 0.003893627 ubox
4 16 0.003793679 ubox
4 17 0.021553480 ubox
4 19 0.006295431 ubox
4 32 0.005280695 ubox
4 37 0.039361946 ubox
4 39 0.010047124 ubox
4 43 0.003280191 ubox
5 9 0.020746018 ubox
5 11 0.047399436 ubox
5 12 0.018011823 ubox
5 15 0.003196311 ubox
5 36 0.041159673 ubox
5 38 0.007852271 ubox
5 40 0.004488590 ubox
5 41 0.032190572 ubox
5 42 0.006486745 ubox
6 12 0.016758075 ubox
6 15 0.026932264 ubox
6 30 0.004674159 ubox
6 38 0.254125676 ubox
6 40 0.031379016 ubox
6 42 0.009488625 ubox
7 14 0.028860266 ubox
7 16 0.019714708 ubox
7 17 0.003482219 ubox
7 19 0.004011245 ubox
7 20 0.003417776 ubox
7 35 0.010122599 ubox
7 37 0.273512762 ubox
7 39 0.028000820 ubox
7 43 0.007782020 ubox
8 12 0.008063505 ubox
8 15 0.021366209 ubox
8 29 0.004253063 ubox
8 36 0.277949907 ubox
8 38 0.013667869 ubox
8 41 0.008781701 ubox
8 42 0.014499763 ubox
9 14 0.020772224 ubox
9 16 0.006568072 ubox
9 17 0.003505726 ubox
9 19 0.010354437 ubox
9 20 0.012065961 ubox
9 28 0.004020363 ubox
9 35 0.276368819 ubox
9 37 0.007013910 ubox
9 39 0.011924219 ubox
9 43 0.039302861 ubox
10 15 0.006946341 ubox
10 27 0.014351322 ubox
10 34 0.208983448 ubox
10 38 0.016752491 ubox
10 40 0.008534159 ubox
10 42 0.044484149 ubox
11 18 0.124417280 ubox
11 26 0.019849889 ubox
11 33 0.184822072 ubox
11 35 0.007424351 ubox
11 37 0.017051123 ubox
11 39 0.008995056 ubox
11 43 0.351221746 ubox
12 16 0.003944008 ubox
12 17 0.124173367 ubox
12 18 0.008844996 ubox
12 19 0.018347848 ubox
12 20 0.011267769 ubox
12 21 0.007991578 ubox
12 25 0.025453689 ubox
12 31 0.003978539 ubox
12 32 0.156173210 ubox
12 35 0.003255263 ubox
12 37 0.004008254 ubox
12 43 0.034666553 ubox
13 22 0.018223549 ubox
13 24 0.038661368 ubox
13 29 0.008443217 ubox
13 30 0.007732085 ubox
13 36 0.005764355 ubox
13 40 0.003320810 ubox
13 41 0.950115487 ubox
13 42 0.009994357 ubox
14 23 0.038264151 ubox
14 30 0.104706816 ubox
14 38 0.009569603 ubox
14 40 0.952386257 ubox
14 42 0.004538894 ubox
15 19 0.003967944 ubox
15 20 0.008532380 ubox
15 21 0.006699580 ubox
15 28 0.011454678 ubox
15 31 0.009129583 ubox
15 35 0.004520656 ubox
15 37 0.009471831 ubox
15 39 0.950137757 ubox
16 23 0.004306728 ubox
16 30 0.008921136 ubox
16 38 0.909730116 ubox
16 40 0.005281661 ubox
17 23 0.018728687 ubox
17 30 0.011159172 ubox
17 38 0.086712343 ubox
17 40 0.006060140 ubox
17 42 0.027139604 ubox
18 22 0.019790724 ubox
18 23 0.004252251 ubox
18 24 0.029713775 ubox
18 29 0.016147762 ubox
18 36 0.478461967 ubox
18 38 0.012134834 ubox
18 41 0.028024251 ubox
19 23 0.025944883 ubox
19 34 0.009922850 ubox
19 38 0.007648642 ubox
19 40 0.025956644 ubox
20 34 0.076923783 ubox
20 38 0.008890168 ubox
21 27 0.008385898 ubox
21 34 0.968996140 ubox
21 38 0.005188236 ubox
22 26 0.009224441 ubox
22 33 0.982429944 ubox
22 37 0.004054795 ubox
23 32 0.986892116 ubox
24 31 0.989997339 ubox
25 30 0.989510296 ubox
26 29 0.988057922 ubox
27 28 0.841795317 ubox
36 43 0.005204334 ubox
37 42 0.003918751 ubox
13 41 0.9746794 lbox
14 40 0.9746794 lbox
15 39 0.9746794 lbox
16 38 0.9746794 lbox
21 34 0.9746794 lbox
22 33 0.9746794 lbox
23 32 0.9746794 lbox
24 31 0.9746794 lbox
25 30 0.9746794 lbox
26 29 0.9746794 lbox
27 28 0.9746794 lbox
showpage
end
%%EOF
