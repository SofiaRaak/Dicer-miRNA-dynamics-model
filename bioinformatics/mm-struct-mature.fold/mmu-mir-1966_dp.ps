%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Aug 18 13:07:45 2023
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% doof

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (mmu-mir-1966)
} def

/sequence { (\
AAGGGAGCUGGCUCAGGAGAGAGUC&UCUGACUCAACUCUCCCUAG\
) } def
/len { sequence length } bind def

/cutpoint 26 def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 43 0.035628701 ubox
2 9 0.026498332 ubox
2 13 0.016539004 ubox
2 43 0.945074288 ubox
3 8 0.027358892 ubox
3 9 0.003285594 ubox
3 12 0.017538692 ubox
3 13 0.011024463 ubox
3 14 0.083297812 ubox
3 40 0.094159266 ubox
3 41 0.051238525 ubox
3 42 0.980204360 ubox
3 43 0.014201219 ubox
4 8 0.003508812 ubox
4 12 0.012298982 ubox
4 13 0.083574359 ubox
4 14 0.008211345 ubox
4 39 0.095602075 ubox
4 40 0.051864049 ubox
4 41 0.980231481 ubox
4 42 0.014357482 ubox
5 12 0.083409409 ubox
5 13 0.005197208 ubox
5 14 0.118075913 ubox
5 38 0.112578436 ubox
5 39 0.005123182 ubox
5 40 0.979644490 ubox
5 41 0.007059603 ubox
6 13 0.118573363 ubox
6 37 0.119598221 ubox
6 39 0.977675330 ubox
7 12 0.117711252 ubox
7 14 0.005198412 ubox
7 24 0.003516522 ubox
7 36 0.130748645 ubox
7 37 0.008085924 ubox
7 38 0.971887890 ubox
8 16 0.121956513 ubox
8 17 0.036060501 ubox
8 19 0.051099329 ubox
8 21 0.003257206 ubox
8 23 0.006060036 ubox
8 29 0.005780031 ubox
8 45 0.053084728 ubox
9 15 0.122510046 ubox
9 16 0.035446021 ubox
9 18 0.051202790 ubox
9 20 0.005685057 ubox
9 22 0.005729060 ubox
9 34 0.936604040 ubox
9 35 0.051624845 ubox
9 44 0.054497228 ubox
10 14 0.120703923 ubox
10 25 0.134574707 ubox
10 31 0.007775786 ubox
10 32 0.094468217 ubox
10 33 0.947892507 ubox
10 36 0.070638705 ubox
10 37 0.045186247 ubox
10 42 0.003179729 ubox
10 43 0.054690580 ubox
11 24 0.154116410 ubox
11 25 0.006189898 ubox
11 31 0.237361218 ubox
11 32 0.862236530 ubox
11 33 0.048090131 ubox
11 36 0.048408493 ubox
11 37 0.004049289 ubox
11 42 0.054648914 ubox
12 16 0.006338795 ubox
12 17 0.018275350 ubox
12 19 0.024800835 ubox
12 21 0.042973001 ubox
12 23 0.156854159 ubox
12 45 0.031094922 ubox
13 18 0.023044645 ubox
13 20 0.061301389 ubox
13 22 0.156858820 ubox
13 30 0.948553504 ubox
13 34 0.014789214 ubox
13 35 0.009928308 ubox
13 44 0.031685804 ubox
13 45 0.003432915 ubox
14 19 0.062821637 ubox
14 21 0.156720157 ubox
14 29 0.955131420 ubox
14 45 0.007146587 ubox
15 28 0.953600687 ubox
15 32 0.019926139 ubox
15 37 0.055648716 ubox
15 39 0.004016065 ubox
15 43 0.096693992 ubox
16 25 0.004023693 ubox
16 27 0.949460034 ubox
16 28 0.046896594 ubox
16 31 0.020578208 ubox
16 32 0.016354864 ubox
16 36 0.056192670 ubox
16 37 0.033474252 ubox
16 38 0.005560586 ubox
16 39 0.035088981 ubox
16 41 0.130185163 ubox
16 42 0.099918703 ubox
16 43 0.008668444 ubox
17 24 0.011376312 ubox
17 25 0.100020644 ubox
17 26 0.740826855 ubox
17 27 0.089124046 ubox
17 31 0.017262619 ubox
17 33 0.034087382 ubox
17 36 0.034662795 ubox
17 37 0.008051655 ubox
17 38 0.082652245 ubox
17 40 0.132313809 ubox
17 41 0.098432153 ubox
17 42 0.008998823 ubox
18 24 0.102320019 ubox
18 26 0.109138745 ubox
18 28 0.022136374 ubox
18 32 0.034130086 ubox
18 37 0.092145936 ubox
18 39 0.133545040 ubox
19 24 0.015151718 ubox
19 25 0.074761464 ubox
19 26 0.015274062 ubox
19 27 0.026989813 ubox
19 28 0.007026867 ubox
19 31 0.034014202 ubox
19 33 0.025674149 ubox
19 36 0.092347558 ubox
19 37 0.004717918 ubox
19 38 0.133729720 ubox
19 40 0.097502306 ubox
20 24 0.065702662 ubox
20 26 0.027503854 ubox
20 28 0.029904487 ubox
20 32 0.025312410 ubox
20 37 0.133072388 ubox
20 39 0.097539092 ubox
21 25 0.013933966 ubox
21 26 0.007937217 ubox
21 27 0.032252581 ubox
21 31 0.024656562 ubox
21 33 0.202983633 ubox
21 36 0.083841357 ubox
21 38 0.097562354 ubox
22 26 0.030708461 ubox
22 28 0.027824306 ubox
22 32 0.220809033 ubox
22 37 0.097572100 ubox
23 26 0.003611212 ubox
23 27 0.027689918 ubox
23 28 0.004602802 ubox
23 31 0.221723451 ubox
23 36 0.097490504 ubox
24 30 0.221411051 ubox
24 34 0.003927329 ubox
24 35 0.091956791 ubox
25 29 0.218485536 ubox
28 34 0.018495858 ubox
28 35 0.007477856 ubox
29 33 0.019678139 ubox
29 36 0.011396527 ubox
29 38 0.007785688 ubox
30 37 0.007682566 ubox
2 43 0.9746794 lbox
3 42 0.9746794 lbox
4 41 0.9746794 lbox
5 40 0.9746794 lbox
6 39 0.9746794 lbox
7 38 0.9746794 lbox
9 34 0.9746794 lbox
10 33 0.9746794 lbox
11 32 0.9746794 lbox
13 30 0.9746794 lbox
14 29 0.9746794 lbox
15 28 0.9746794 lbox
16 27 0.9746794 lbox
17 26 0.9746794 lbox
showpage
end
%%EOF
